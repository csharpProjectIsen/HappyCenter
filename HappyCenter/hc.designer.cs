#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HappyCenter
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="hcbdd")]
	public partial class hcDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertActivites(Activites instance);
    partial void UpdateActivites(Activites instance);
    partial void DeleteActivites(Activites instance);
    partial void InsertClients(Clients instance);
    partial void UpdateClients(Clients instance);
    partial void DeleteClients(Clients instance);
    #endregion
		
		public hcDataContext() : 
				base(global::HappyCenter.Properties.Settings.Default.hcbddConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public hcDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hcDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hcDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hcDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Activites> Activites
		{
			get
			{
				return this.GetTable<Activites>();
			}
		}
		
		public System.Data.Linq.Table<Clients> Clients
		{
			get
			{
				return this.GetTable<Clients>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activites")]
	public partial class Activites : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _name;
		
		private string _description;
		
		private System.TimeSpan _heure_debut;
		
		private System.TimeSpan _heure_fin;
		
		private int _effectif_maximal;
		
		private string _nom_moniteur;
		
		private string _photo;
		
		private string _jour;
		
		private EntityRef<Clients> _Clients1;
		
		private EntityRef<Clients> _Clients;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void Onheure_debutChanging(System.TimeSpan value);
    partial void Onheure_debutChanged();
    partial void Onheure_finChanging(System.TimeSpan value);
    partial void Onheure_finChanged();
    partial void Oneffectif_maximalChanging(int value);
    partial void Oneffectif_maximalChanged();
    partial void Onnom_moniteurChanging(string value);
    partial void Onnom_moniteurChanged();
    partial void OnphotoChanging(string value);
    partial void OnphotoChanged();
    partial void OnjourChanging(string value);
    partial void OnjourChanged();
    #endregion
		
		public Activites()
		{
			this._Clients1 = default(EntityRef<Clients>);
			this._Clients = default(EntityRef<Clients>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Clients.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_heure_debut", DbType="Time NOT NULL")]
		public System.TimeSpan heure_debut
		{
			get
			{
				return this._heure_debut;
			}
			set
			{
				if ((this._heure_debut != value))
				{
					this.Onheure_debutChanging(value);
					this.SendPropertyChanging();
					this._heure_debut = value;
					this.SendPropertyChanged("heure_debut");
					this.Onheure_debutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_heure_fin", DbType="Time NOT NULL")]
		public System.TimeSpan heure_fin
		{
			get
			{
				return this._heure_fin;
			}
			set
			{
				if ((this._heure_fin != value))
				{
					this.Onheure_finChanging(value);
					this.SendPropertyChanging();
					this._heure_fin = value;
					this.SendPropertyChanged("heure_fin");
					this.Onheure_finChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_effectif_maximal", DbType="Int NOT NULL")]
		public int effectif_maximal
		{
			get
			{
				return this._effectif_maximal;
			}
			set
			{
				if ((this._effectif_maximal != value))
				{
					this.Oneffectif_maximalChanging(value);
					this.SendPropertyChanging();
					this._effectif_maximal = value;
					this.SendPropertyChanged("effectif_maximal");
					this.Oneffectif_maximalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom_moniteur", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string nom_moniteur
		{
			get
			{
				return this._nom_moniteur;
			}
			set
			{
				if ((this._nom_moniteur != value))
				{
					this.Onnom_moniteurChanging(value);
					this.SendPropertyChanging();
					this._nom_moniteur = value;
					this.SendPropertyChanged("nom_moniteur");
					this.Onnom_moniteurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_photo", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string photo
		{
			get
			{
				return this._photo;
			}
			set
			{
				if ((this._photo != value))
				{
					this.OnphotoChanging(value);
					this.SendPropertyChanging();
					this._photo = value;
					this.SendPropertyChanged("photo");
					this.OnphotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jour", DbType="NChar(10)")]
		public string jour
		{
			get
			{
				return this._jour;
			}
			set
			{
				if ((this._jour != value))
				{
					this.OnjourChanging(value);
					this.SendPropertyChanging();
					this._jour = value;
					this.SendPropertyChanged("jour");
					this.OnjourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activites_Clients", Storage="_Clients1", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public Clients Clients1
		{
			get
			{
				return this._Clients1.Entity;
			}
			set
			{
				Clients previousValue = this._Clients1.Entity;
				if (((previousValue != value) 
							|| (this._Clients1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients1.Entity = null;
						previousValue.Activites1 = null;
					}
					this._Clients1.Entity = value;
					if ((value != null))
					{
						value.Activites1 = this;
					}
					this.SendPropertyChanged("Clients1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Activites", Storage="_Clients", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public Clients Clients
		{
			get
			{
				return this._Clients.Entity;
			}
			set
			{
				Clients previousValue = this._Clients.Entity;
				if (((previousValue != value) 
							|| (this._Clients.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clients.Entity = null;
						previousValue.Activites = null;
					}
					this._Clients.Entity = value;
					if ((value != null))
					{
						value.Activites = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Clients");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clients")]
	public partial class Clients : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Surname;
		
		private int _Age;
		
		private string _Nom_activite;
		
		private string _Jour_activite;
		
		private string _Horaires_activite;
		
		private EntityRef<Activites> _Activites;
		
		private EntityRef<Activites> _Activites1;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnAgeChanging(int value);
    partial void OnAgeChanged();
    partial void OnNom_activiteChanging(string value);
    partial void OnNom_activiteChanged();
    partial void OnJour_activiteChanging(string value);
    partial void OnJour_activiteChanged();
    partial void OnHoraires_activiteChanging(string value);
    partial void OnHoraires_activiteChanged();
    #endregion
		
		public Clients()
		{
			this._Activites = default(EntityRef<Activites>);
			this._Activites1 = default(EntityRef<Activites>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._Activites1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int NOT NULL")]
		public int Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom_activite", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nom_activite
		{
			get
			{
				return this._Nom_activite;
			}
			set
			{
				if ((this._Nom_activite != value))
				{
					this.OnNom_activiteChanging(value);
					this.SendPropertyChanging();
					this._Nom_activite = value;
					this.SendPropertyChanged("Nom_activite");
					this.OnNom_activiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jour_activite", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Jour_activite
		{
			get
			{
				return this._Jour_activite;
			}
			set
			{
				if ((this._Jour_activite != value))
				{
					this.OnJour_activiteChanging(value);
					this.SendPropertyChanging();
					this._Jour_activite = value;
					this.SendPropertyChanged("Jour_activite");
					this.OnJour_activiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Horaires_activite", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Horaires_activite
		{
			get
			{
				return this._Horaires_activite;
			}
			set
			{
				if ((this._Horaires_activite != value))
				{
					this.OnHoraires_activiteChanging(value);
					this.SendPropertyChanging();
					this._Horaires_activite = value;
					this.SendPropertyChanged("Horaires_activite");
					this.OnHoraires_activiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clients_Activites", Storage="_Activites", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public Activites Activites
		{
			get
			{
				return this._Activites.Entity;
			}
			set
			{
				Activites previousValue = this._Activites.Entity;
				if (((previousValue != value) 
							|| (this._Activites.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activites.Entity = null;
						previousValue.Clients = null;
					}
					this._Activites.Entity = value;
					if ((value != null))
					{
						value.Clients = this;
					}
					this.SendPropertyChanged("Activites");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Activites_Clients", Storage="_Activites1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public Activites Activites1
		{
			get
			{
				return this._Activites1.Entity;
			}
			set
			{
				Activites previousValue = this._Activites1.Entity;
				if (((previousValue != value) 
							|| (this._Activites1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Activites1.Entity = null;
						previousValue.Clients1 = null;
					}
					this._Activites1.Entity = value;
					if ((value != null))
					{
						value.Clients1 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(int);
					}
					this.SendPropertyChanged("Activites1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
