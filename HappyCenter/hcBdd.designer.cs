#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HappyCenter
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="happyCenterBdd")]
	public partial class hcBddDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertMoniteurs(Moniteurs instance);
    partial void UpdateMoniteurs(Moniteurs instance);
    partial void DeleteMoniteurs(Moniteurs instance);
    partial void InsertActivites(Activites instance);
    partial void UpdateActivites(Activites instance);
    partial void DeleteActivites(Activites instance);
    partial void InsertPersonnes(Personnes instance);
    partial void UpdatePersonnes(Personnes instance);
    partial void DeletePersonnes(Personnes instance);
    partial void InsertSalles(Salles instance);
    partial void UpdateSalles(Salles instance);
    partial void DeleteSalles(Salles instance);
    #endregion
		
		public hcBddDataContext() : 
				base(global::HappyCenter.Properties.Settings.Default.happyCenterBddConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public hcBddDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hcBddDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hcBddDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public hcBddDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Moniteurs> Moniteurs
		{
			get
			{
				return this.GetTable<Moniteurs>();
			}
		}
		
		public System.Data.Linq.Table<Activites> Activites
		{
			get
			{
				return this.GetTable<Activites>();
			}
		}
		
		public System.Data.Linq.Table<Personnes> Personnes
		{
			get
			{
				return this.GetTable<Personnes>();
			}
		}
		
		public System.Data.Linq.Table<Salles> Salles
		{
			get
			{
				return this.GetTable<Salles>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Moniteurs")]
	public partial class Moniteurs : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nom;
		
		private string _Prenom;
		
		private string _Activite;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnActiviteChanging(string value);
    partial void OnActiviteChanged();
    #endregion
		
		public Moniteurs()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activite", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Activite
		{
			get
			{
				return this._Activite;
			}
			set
			{
				if ((this._Activite != value))
				{
					this.OnActiviteChanging(value);
					this.SendPropertyChanging();
					this._Activite = value;
					this.SendPropertyChanged("Activite");
					this.OnActiviteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Activites")]
	public partial class Activites : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nom;
		
		private System.TimeSpan _Heure_Debut;
		
		private System.TimeSpan _Heure_Fin;
		
		private int _Age_Min;
		
		private int _Age_Max;
		
		private System.Data.Linq.Binary _Photo;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnHeure_DebutChanging(System.TimeSpan value);
    partial void OnHeure_DebutChanged();
    partial void OnHeure_FinChanging(System.TimeSpan value);
    partial void OnHeure_FinChanged();
    partial void OnAge_MinChanging(int value);
    partial void OnAge_MinChanged();
    partial void OnAge_MaxChanging(int value);
    partial void OnAge_MaxChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    #endregion
		
		public Activites()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heure_Debut", DbType="Time NOT NULL")]
		public System.TimeSpan Heure_Debut
		{
			get
			{
				return this._Heure_Debut;
			}
			set
			{
				if ((this._Heure_Debut != value))
				{
					this.OnHeure_DebutChanging(value);
					this.SendPropertyChanging();
					this._Heure_Debut = value;
					this.SendPropertyChanged("Heure_Debut");
					this.OnHeure_DebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heure_Fin", DbType="Time NOT NULL")]
		public System.TimeSpan Heure_Fin
		{
			get
			{
				return this._Heure_Fin;
			}
			set
			{
				if ((this._Heure_Fin != value))
				{
					this.OnHeure_FinChanging(value);
					this.SendPropertyChanging();
					this._Heure_Fin = value;
					this.SendPropertyChanged("Heure_Fin");
					this.OnHeure_FinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age_Min", DbType="Int NOT NULL")]
		public int Age_Min
		{
			get
			{
				return this._Age_Min;
			}
			set
			{
				if ((this._Age_Min != value))
				{
					this.OnAge_MinChanging(value);
					this.SendPropertyChanging();
					this._Age_Min = value;
					this.SendPropertyChanged("Age_Min");
					this.OnAge_MinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age_Max", DbType="Int NOT NULL")]
		public int Age_Max
		{
			get
			{
				return this._Age_Max;
			}
			set
			{
				if ((this._Age_Max != value))
				{
					this.OnAge_MaxChanging(value);
					this.SendPropertyChanging();
					this._Age_Max = value;
					this.SendPropertyChanged("Age_Max");
					this.OnAge_MaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Personnes")]
	public partial class Personnes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nom;
		
		private string _Prenom;
		
		private int _Age;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnAgeChanging(int value);
    partial void OnAgeChanged();
    #endregion
		
		public Personnes()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int NOT NULL")]
		public int Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Salles")]
	public partial class Salles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nom_Activite;
		
		private string _Description;
		
		private string _Nom_Moniteur;
		
		private System.TimeSpan _Duree_Activite;
		
		private int _Effectif_Max;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNom_ActiviteChanging(string value);
    partial void OnNom_ActiviteChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNom_MoniteurChanging(string value);
    partial void OnNom_MoniteurChanged();
    partial void OnDuree_ActiviteChanging(System.TimeSpan value);
    partial void OnDuree_ActiviteChanged();
    partial void OnEffectif_MaxChanging(int value);
    partial void OnEffectif_MaxChanged();
    #endregion
		
		public Salles()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom_Activite", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nom_Activite
		{
			get
			{
				return this._Nom_Activite;
			}
			set
			{
				if ((this._Nom_Activite != value))
				{
					this.OnNom_ActiviteChanging(value);
					this.SendPropertyChanging();
					this._Nom_Activite = value;
					this.SendPropertyChanged("Nom_Activite");
					this.OnNom_ActiviteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom_Moniteur", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nom_Moniteur
		{
			get
			{
				return this._Nom_Moniteur;
			}
			set
			{
				if ((this._Nom_Moniteur != value))
				{
					this.OnNom_MoniteurChanging(value);
					this.SendPropertyChanging();
					this._Nom_Moniteur = value;
					this.SendPropertyChanged("Nom_Moniteur");
					this.OnNom_MoniteurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duree_Activite", DbType="Time NOT NULL")]
		public System.TimeSpan Duree_Activite
		{
			get
			{
				return this._Duree_Activite;
			}
			set
			{
				if ((this._Duree_Activite != value))
				{
					this.OnDuree_ActiviteChanging(value);
					this.SendPropertyChanging();
					this._Duree_Activite = value;
					this.SendPropertyChanged("Duree_Activite");
					this.OnDuree_ActiviteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Effectif_Max", DbType="Int NOT NULL")]
		public int Effectif_Max
		{
			get
			{
				return this._Effectif_Max;
			}
			set
			{
				if ((this._Effectif_Max != value))
				{
					this.OnEffectif_MaxChanging(value);
					this.SendPropertyChanging();
					this._Effectif_Max = value;
					this.SendPropertyChanged("Effectif_Max");
					this.OnEffectif_MaxChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
